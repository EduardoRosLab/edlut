// Specify the number of equations in the system
// There is one equation for each variable (except for t)
#define NUM_EQS 7

// Define the constant parameters used by the equations.
// all members of the struct must be float
struct consts
  {
   float cm,texc,tinh,tcou,fcou,grest,eexc,einh,erest,eth,tref;
  };

union vars
  {
   float list[NUM_EQS+1]; // There are NUM_EQS+1 variables
   struct
     {
      float t;
// Variables: define the variables asociated with each equation
// in the same order as its corresponing equations have been assigned
// in Eqs_sys
      float vmd,spk,gexc,ginh,gcou,tf,tr;
     } named;
  };

// Use this function to access previously calculated tables
inline float table_access(int ntable, union vars *v);

// Define the equations

// equation associated with independent variables
inline float vm_diff_eq(union vars *v, struct consts *c, float h)
  {
   return((v->named.gexc*(c->eexc-v->named.vmd) + v->named.ginh*(c->einh-v->named.vmd) + c->grest*(c->erest-v->named.vmd))*1e-9/c->cm); // inputs are in nS
  }

inline float spk_eq(union vars *v, struct consts *c, float h)
  {
   float spk;
   if((v->named.spk > 0.5 && v->named.vmd > c->erest) || (v->named.spk < 0.5 && v->named.vmd >= c->eexc))
      spk=1.0;
   else
      spk=0.0;
   v->named.spk=spk; // update sice this value is used by other functions 
   return(spk);
  }

inline float gexc_eq(union vars *v, struct consts *c, float h)
  {
   return(v->named.gexc*exp(-v->named.t/c->texc));
  }

inline float ginh_eq(union vars *v, struct consts *c, float h)
  {
   return(v->named.ginh*exp(-v->named.t/c->tinh));
  }

inline float gcou_eq(union vars *v, struct consts *c, float h)
  {
   return(v->named.gcou*exp(-v->named.t/c->tcou));
  }

// calculate ft from another table
#define NOPREDICTION -1.0 // also defined in the simulator
// table-dependent definitions
#define VM_TABLE 0
#define T_DIM 0
// {2,3,4,1}; // corresponding variables
inline float tf_eq(union vars *v, struct consts *c, float h)
  {   
   unsigned long tabpos;
   int ncoor;
   float prevm,vm,tf0,tf;
   tabpos=0;
   for(ncoor=0;ncoor<Tables[VM_TABLE].coord.size[T_DIM];ncoor++) // search for a spike
     {
      v->named.t=Tables[VM_TABLE].coord.ranges[T_DIM][ncoor];
      vm=table_access(VM_TABLE, v);
      if(vm >= c->eth)
         break;
     }
   if(ncoor<Tables[VM_TABLE].coord.size[T_DIM])
     {
      tf0=v->named.t;
      prevm=vm;
      for(ncoor++;ncoor<Tables[VM_TABLE].coord.size[T_DIM];ncoor++) // search for the spike peak (maximum depolarization)
        {
         v->named.t=Tables[VM_TABLE].coord.ranges[T_DIM][ncoor];
         vm=table_access(VM_TABLE, v);
         if(prevm >= vm)
            break;
         else
            prevm=vm;
        }
//      tf=(tf0+v->named.t)/2; // middle point between the spike start and the spike peak: possible spike omission
      tf=tf0; // neuron spikes when reaching the threshold 
     }
   else
      tf=NOPREDICTION;
   return(tf);
  }

// calculate fr from another table
#define TF_TABLE 5
inline float tr_eq(union vars *v, struct consts *c, float h)
  {
   float tf;
   tf=table_access(TF_TABLE, v);
   if(tf!=NOPREDICTION)
      tf+=c->tref;
   return(tf);
  }

inline float g_eq_tail(union vars *v, struct consts *c, float h)
  {
   return(0.0);
  }

inline float vmd_tail(union vars *v, struct consts *c, float h)
  {
   return(c->erest);
  }

inline float spk_eq_tail(union vars *v, struct consts *c, float h)
  {
   return(0.0);
  }

inline float vmd_spike_eq(union vars *v, struct consts *c, float h)
  {
   float vmd;
   if(v->named.spk < 0.5)
     {
      if(v->named.vmd<c->eth)
         v->named.vmd=c->eth;
      vmd=v->named.vmd+(c->eexc-c->eth)*h/(c->tref*0.4);
      if(vmd>c->eexc)
         vmd=c->eexc;
     }
   else
     {
      vmd=v->named.vmd-(c->eexc-c->erest)*h/(c->tref*0.4);
      if(vmd<c->erest)
         vmd=c->erest;
     }
   return(vmd);
  }

// Specify the equation order
struct teq_sys
  {
   float (*eq)(union vars *, struct consts *, float);
   int diff;
  } Eq_sys[][NUM_EQS]={
  {{vm_diff_eq,1},{spk_eq,0},{gexc_eq,0},{ginh_eq,0},{gcou_eq,0},{tf_eq,0},{tr_eq,0}},
  {{vmd_tail,0},{spk_eq_tail,0},{g_eq_tail,0},{g_eq_tail,0},{g_eq_tail,0},{tf_eq,0},{tr_eq,0}},
  {{vmd_spike_eq,0},{spk_eq,0},{gexc_eq,0},{ginh_eq,0},{gcou_eq,0},{tf_eq,0},{tr_eq,0}}
  };


inline int normal_sel(union vars *v, struct consts *c)
  {
   return(0);
  }

inline int spike_sel(union vars *v, struct consts *c)
  {
   float vm;
   vm=v->named.vmd + v->named.gcou*c->fcou*exp(-v->named.t/c->tcou); // gcou is not a differential variable therefore it is not update: *exp() required
   return((vm >= c->eth || v->named.spk > 0.5)?2:0);
  }

inline int tail_sel(union vars *v, struct consts *c)
  {
   return(1);
  }

// Specify the equation selectors
int (*(Eq_sel[]))(union vars *, struct consts *)=
  {normal_sel, tail_sel, spike_sel};

/*
$PAR$

// Number of files to be generated:
1

// --- table file definition ---
// File name (up to 32 characters):
_boris6iInterneuronEC.dat

// Number of tables in file:
7

// Value of constants previously defined:
// cm    texc   tinh tcou   fcou  grest eexc einh   erest    eth    tref
//30e-12  0.5e-3  2e-3 1e-3   0.044 0.2   0    -0.080 -0.070   -0.060 1e-3 //interneurona
//2e-12   0.5e-3 10e-3 1e-3   0.044 0.2   0    -0.080 -0.070   -0.040 2e-3 //granular
30e-12  0.64e-3 2e-3 1e-3  0.044  0.2    0  -0.080 -0.056  -0.040  2e-3 //Interneuron


// ************* TABLE DEFINITION Vm **************
// Initialization values for each declared variable except t:
-0.056 0 0 0 0 0 0

// Number of equations to be simulated:
5

// List of equations to be simulated (the first one is number 0):
0 1 2 3 4

// Number of dimensions (at least one: time dimension):
6

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
0

// Number of intervals of the dimension:
3

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic) selector
0.0    0.006 20 0 2
0.0065 0.500 20 0 2
0.55   0.55   1 0 1

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
2

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic) selector
0 1 2 0 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
3

// Number of intervals of the dimension:
2

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 0.0 1 0 0
0.05 80.0 11 2 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
4

// Number of intervals of the dimension:
2

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 0.0 1 0 0
0.1 100.0 11 2 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
5

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 1.0 20 0 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
1

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
-0.08 0 50 0 0


// ************* TABLE DEFINITION Spk **************
// Initialization values for each declared variable except t:
-0.056 0 0 0 0 0 0

// Number of equations to be simulated:
5

// List of equations to be simulated (the first one is number 0):
1 0 2 3 4

// Number of dimensions (at least one: time dimension):
6

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
0

// Number of intervals of the dimension:
3

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic) selector
0.0    0.006 20 0 2
0.0065 0.500 20 0 2
0.55   0.55   1 0 1

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
2

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic) selector
0 1 2 0 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
3

// Number of intervals of the dimension:
2

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 0.0 1 0 0
0.05 80.0 11 2 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
4

// Number of intervals of the dimension:
2

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 0.0 1 0 0
0.1 100.0 11 2 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
5

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 1.0 20 0 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
1

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
-0.08 0 50 0 0



// ************* TABLE DEFINITION Gexc **************
// Initialization values for each declared variable except t:
-0.056 0 0 0 0 0 0

// Number of equations to be simulated:
1

// List of equations to be simulated (the first one is number 0):
2

// Number of dimensions (at least one: time dimension):
2

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
0
// Number of intervals of the dimension:
2
// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic) number_of_equation_system_to_use
0 0.0032 100 0 0
0.00324 0.00324 1 0 1

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
3 // Gexc 
// Number of intervals of the dimension:
2
// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic) number_of_equation_system_to_use
0.0 0.0 1 0 0
0.05 160.0 400 2 0


// ************* TABLE DEFINITION Ginh **************
// Initialization values for each declared variable except t:
-0.056 0 0 0 0 0 0

// Number of equations to be simulated:
1

// List of equations to be simulated (the first one is number 0):
3

// Number of dimensions (at least one: time dimension):
2

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
0

// Number of intervals of the dimension:
2

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0 0.01 100 0 0
0.014 0.014 1 0 1

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
4  // Ginh

// Number of intervals of the dimension:
2

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 0.0 1 0 0
0.1 200.0 400 2 0


// ************* TABLE DEFINITION Gcou **************
// Initialization values for each declared variable except t:
-0.056 0 0 0 0 0 0

// Number of equations to be simulated:
1

// List of equations to be simulated (the first one is number 0):
4

// Number of dimensions (at least one: time dimension):
2

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
0
// Number of intervals of the dimension:
2
// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic) number_of_equation_system_to_use
0 0.005 100 0 0
0.006 0.006 1 0 1

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
5  // Gcou
// Number of intervals of the dimension:
1
// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic) number_of_equation_system_to_use
0.0 1.0 400 0 0


// ************* TABLE DEFINITION Tf **************
// Initialization values for each declared variable except t:
-0.056 0 0 0 0 0 0

// Number of equations to be simulated:
1

// List of equations to be simulated (the first one is number 0):
5

// Number of dimensions (at least one: time dimension):
5

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
2

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic) selector
0 1 2 0 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
3

// Number of intervals of the dimension:
2

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 0.0 1 0 0
0.05 80.0 11 2 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
4

// Number of intervals of the dimension:
2

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 0.0 1 0 0
0.1 100.0 11 2 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
5

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 1.0 20 0 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
1

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
-0.08 0 50 0 0



// ************* TABLE DEFINITION Tr **************
// Initialization values for each declared variable except t:
-0.056 0 0 0 0 0 0

// Number of equations to be simulated:
1

// List of equations to be simulated (the first one is number 0):
6

// Number of dimensions (at least one: time dimension):
5

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
2

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic) selector
0 1 2 0 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
3

// Number of intervals of the dimension:
2

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 0.0 1 0 0
0.05 80.0 11 2 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
4

// Number of intervals of the dimension:
2

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 0.0 1 0 0
0.1 100.0 11 2 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
5

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
0.0 1.0 20 0 0

// ===== definition of dimension coordinates =====
// Number of dependent variable (and equation) corresponding to the dimension (0 is time):
1

// Number of intervals of the dimension:
1

// --- definition of intervals ---
// For each interval: first_coordinate last_coordinate number_of_coordinates linear_or_logarithmic(0=linear 2=logarithmic)
-0.08 0 50 0 0

*/
